@page "/Configuracion"

@rendermode InteractiveWebAssembly
@inject IClientService<Configuraciones> configuracionesService
@inject NotificationService NotificationService
@inject NavigationManager NavigationManager
<RadzenNotification/>
<PageTitle>Configuraci&oacute;n</PageTitle>
<div class="container-fluid">
    <div class="card shadow">
        <EditForm Model="configuracion" OnValidSubmit="Guardar">
            <DataAnnotationsValidator />
            <div class="d-flex justify-content-center">
                <div class="row">
                    <img class="text-center" src="@getLogo()" style="width: 100px; height: 100px; margin-left: 25%; top:20px;" />
                    <label class="btn btn-dark text-center">
                        <InputFile style="display: none;" accept=".png,.jpg,.jpeg" OnChange="cambiar" /> Cambiar Logo
                    </label>
                </div>
            </div>
            <div class="card-body">
                <div class="form-group">
                    <label for="nombreEmpresa">Nombre de la empresa:</label>
                    <InputText id="nombreEmpresa" @bind-Value="configuracion.NombreEmpresa" class="form-control" />
                </div>

                <div class="form-group">
                    <label for="direccion">Dirección:</label>
                    <InputText id="direccion" @bind-Value="configuracion.Direccion" class="form-control" />
                </div>

                <div class="form-group">
                    <label for="nota">Nota:</label>
                    <InputText id="nota" @bind-Value="configuracion.Nota" class="form-control" />
                </div>

                <div class="form-group">
                    <label for="nfc">NFC:</label>
                    <InputText id="nfc" @bind-Value="configuracion.NFC" class="form-control" />
                </div>

                <div class="form-group">
                    <label for="telefono">Teléfono:</label>
                    <InputText id="telefono" @bind-Value="configuracion.Telefono" class="form-control" />
                </div>
            </div>
            <div class=" text-center card-footer align-content-center">
                <button type="submit" class="btn btn-dark">Guardar</button>
                <button type="button" class="btn btn-danger" @onclick="Cancelar">Cancelar</button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    public Configuraciones configuracion = new Configuraciones();

    protected override async Task OnInitializedAsync()
    {

        var buscar = await configuracionesService.GetAllObject();
        if (buscar != null)
        {
            configuracion = buscar.FirstOrDefault()!;
        }
    }

    public string getLogo()
    {
        if (configuracion.Imagen != null && configuracion.Imagen.Length > 0)
        {
            string base64String = Convert.ToBase64String(configuracion.Imagen);
            return $"data:image/png;base64,{base64String}";
        }
        else
        {
            return "/bootstrap/img/ejemplo.png";
        }
    }

    public async Task cambiar(InputFileChangeEventArgs e)
    {
        var archivo = e.File;
        if (archivo != null)
        {
            var stream = archivo.OpenReadStream();
            using (var memoryStream = new MemoryStream())
            {
                await stream.CopyToAsync(memoryStream);
                configuracion.Imagen = memoryStream.ToArray();
            }
        }
    }

    public async Task Guardar()
    {
        var guardado = await configuracionesService.UpdateObject(configuracion);
        if (guardado)
        {
            var mensaje = new NotificationMessage
                {
                    Severity = NotificationSeverity.Success,
                    Summary = "Guardado",
                    Detail = "Configuración guardada correctamente",
                    Duration = 5000
                };
            NotificationService.Notify(mensaje);
        }
        else
        {
            var mensaje = new NotificationMessage
                {
                    Severity = NotificationSeverity.Error,
                    Summary = "No Guardado",
                    Detail = "Configuración no guardada correctamente",
                    Duration = 5000
                };
            NotificationService.Notify(mensaje);
        }
    }
    private void Cancelar()
    {
        NavigationManager.NavigateTo("/Account/Manage");
    }
}
