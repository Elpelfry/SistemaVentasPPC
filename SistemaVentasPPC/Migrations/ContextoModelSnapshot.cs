// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaVentasPPC.DAL;

#nullable disable

namespace SistemaVentasPPC.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("Shared.Models.Configuraciones", b =>
                {
                    b.Property<int>("ConfiguracionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Direccion")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Imagen")
                        .HasColumnType("BLOB");

                    b.Property<string>("ImagenUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("NFC")
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreEmpresa")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nota")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .HasColumnType("TEXT");

                    b.HasKey("ConfiguracionId");

                    b.ToTable("Configuraciones");

                    b.HasData(
                        new
                        {
                            ConfiguracionId = 1,
                            Direccion = "",
                            ImagenUrl = "",
                            NFC = "",
                            NombreEmpresa = "",
                            Nota = "",
                            Telefono = ""
                        });
                });

            modelBuilder.Entity("Shared.Models.FacturacionDetalle", b =>
                {
                    b.Property<int>("DetalleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FacturacionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DetalleID");

                    b.HasIndex("FacturacionId");

                    b.ToTable("FacturacionDetalle");
                });

            modelBuilder.Entity("Shared.Models.Facturaciones", b =>
                {
                    b.Property<int>("FacturacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CondicionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ConfiguracionId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Devuelta")
                        .HasColumnType("REAL");

                    b.Property<bool>("Eliminada")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<double>("ITBS")
                        .HasColumnType("REAL");

                    b.Property<int>("MetodoPagoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Recibido")
                        .HasColumnType("REAL");

                    b.Property<double>("SubTotal")
                        .HasColumnType("REAL");

                    b.Property<double>("Total")
                        .HasColumnType("REAL");

                    b.HasKey("FacturacionId");

                    b.ToTable("Facturaciones");
                });

            modelBuilder.Entity("Shared.Models.MetodoPagos", b =>
                {
                    b.Property<int>("MetodoPagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("MetodoPagoId");

                    b.ToTable("MetodoPagos");

                    b.HasData(
                        new
                        {
                            MetodoPagoId = 1,
                            Nombre = "Efectivo"
                        },
                        new
                        {
                            MetodoPagoId = 2,
                            Nombre = "Tarjeta"
                        });
                });

            modelBuilder.Entity("Shared.Models.Productos", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Costo")
                        .HasColumnType("REAL");

                    b.Property<int>("Descuento")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EsDisponible")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ganancia")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ITBIS")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Precio")
                        .HasColumnType("REAL");

                    b.HasKey("ProductoId");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("Shared.Models.FacturacionDetalle", b =>
                {
                    b.HasOne("Shared.Models.Facturaciones", null)
                        .WithMany("FacturacionDetalle")
                        .HasForeignKey("FacturacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Shared.Models.Facturaciones", b =>
                {
                    b.Navigation("FacturacionDetalle");
                });
#pragma warning restore 612, 618
        }
    }
}
